# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# your project folder that we can `c [tab]` to
export PROJECTS=~/Code

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

# Path to oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load. (~/.oh-my-zsh/themes/)
ZSH_THEME="robbyrussell"

# oh-my-zsh plugins (~/.oh-my-zsh/plugins/*)
# Custom plugins can be added to ~/.oh-my-zsh/custom/plugins/
plugins=(
  bundler
  git
  github
  knife
  knife_ssh
  osx
  ruby
  rails
  tmux
)

source $ZSH/oh-my-zsh.sh

## Customize PATH
# Default Path
DEFAULT_PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/texbin:/opt/chefdk/bin:$HOME/.rvm/bin

# Heroku Toolbelt, Golang and Postgres App 9.3
APP_PATH="/usr/local/heroku/bin:/usr/local/go/bin:/Applications/Postgres.app/Contents/Versions/9.3/bin"

# Export defaults
export PATH="$DEFAULT_PATH:$APP_PATH"

# GO Environment variables
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin

# $HOME/bin
export PATH=$PATH:$HOME/bin

## EC2 Tools
#export JAVA_HOME="$(/usr/libexec/java_home)"
#export EC2_PRIVATE_KEY="$(/bin/ls "$HOME"/.ec2/pk-*.pem | /usr/bin/head -1)"
#export EC2_CERT="$(/bin/ls "$HOME"/.ec2/cert-*.pem | /usr/bin/head -1)"
#export EC2_HOME="/usr/local/Library/LinkedKegs/ec2-api-tools/jars"

## Disable shell history for Jrnl
HISTINGNORE="jrnl *"

### zsh functions
# From: https://github.com/holman/dotfiles/blob/master/functions/extract
# credit: http://nparikh.org/notes/zshrc.txt
# Usage: extract <file>
# Description: extracts archived files / mounts disk images
# Note: .dmg/hdiutil is Mac OS X-specific.
extract () {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2)  tar -jxvf $1                        ;;
            *.tar.gz)   tar -zxvf $1                        ;;
            *.bz2)      bunzip2 $1                          ;;
            *.dmg)      hdiutil mount $1                    ;;
            *.gz)       gunzip $1                           ;;
            *.tar)      tar -xvf $1                         ;;
            *.tbz2)     tar -jxvf $1                        ;;
            *.tgz)      tar -zxvf $1                        ;;
            *.zip)      unzip $1                            ;;
            *.ZIP)      unzip $1                            ;;
            *.pax)      cat $1 | pax -r                     ;;
            *.pax.Z)    uncompress $1 --stdout | pax -r     ;;
            *.Z)        uncompress $1                       ;;
            *)          echo "'$1' cannot be extracted/mounted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Flush DNS cache on Mac OS X
flush_dns_cache () {
  echo "DNS cache cleared..."
  dscacheutil -flushcache
}

# Clean up merged branches
# From: https://github.com/keiththomps/dotfiles/blob/master/.githelpers
prune_and_delete_merged() {
    git checkout master
    git pull --rebase
    git remote prune origin
    git branch --merged | grep -v "\*" | xargs -n 1 git branch -d
}
