#!/usr/bin/env bash
# Install plug-ins

set -e          # exit on error
set -o pipefail # exit on any command in pipeline
set -x          # verbose

# Helper functions
info () {
  printf "  [ \033[00;34m..\033[0m ] $1"
}

user () {
  printf "\r  [ \033[0;33m?\033[0m ] $1 "
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
  echo ''
  exit
}

# Detect platform
platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='darwin'
elif [[ "$unamestr" == 'FreeBSD' ]]; then
   platform='freebsd'
fi

# Install Oh-My-Zsh
install_ohmyzsh() {
  if ! [ -d $HOME/.oh-my-zsh ]
  then
    info 'installing oh-my-zsh'
    wget --no-check-certificate http://install.ohmyz.sh -O - | sh
    success 'installed oh-my-zsh'
    # Change shell with sudo chsh vagrant -s /usr/bin/zsh
  else
    success 'oh-my-zsh already installed, remove $HOME/.oh-my-zsh if you want to install'
  fi
}

# Insatll Vim Vundle
install_vundle() {
  if ! [ -d $HOME/.vim/bundle ]
  then
    info 'installing Vundle Vim Plugin Manager'
    git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
    exec vim +PluginInstall +qall
    success 'installed Vundle Vim Plugin Manager'
  else
    success 'Vundle Vim Plugin Manager already installed. Remove $HOME/.vim/bundle to reinstall'
  fi
}

# install_ohmyzsh
install_vundle
